<Page x:Class="TouchPortal_Plugin_Helper.AddActionData"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:TouchPortal_Plugin_Helper"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="AddActionData">

    <Page.Resources>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyling" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Gray"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="AddButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#598a94"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#929ba8"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#afb9c9"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent"/>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#181818" Offset="0.0"/>
                    <GradientStop Color="#181818" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#282828" />

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="2" Background="{StaticResource NormalBrush}" BorderThickness="1"/>
                <Border Grid.Column="0" CornerRadius="2,0,0,2" Margin="1" Background="{StaticResource WindowBackgroundBrush}" BorderThickness="0,0,1,0"/>
                <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left"  Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="#282828" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{StaticResource WindowBackgroundBrush}" BorderThickness="1"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <ContextMenu x:Key="cmData">
            <MenuItem Header="Rename" Click="DataRename">
                <MenuItem.Icon>
                    <Image Source="resources/pencil.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove" Click="DataRemove">
                <MenuItem.Icon>
                    <Image Source="resources/bin.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="cmDataChoices">
            <MenuItem Header="Rename" Click="DataChoicesRename">
                <MenuItem.Icon>
                    <Image Source="resources/pencil.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove" Click="DataChoicesRemove">
                <MenuItem.Icon>
                    <Image Source="resources/bin.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
        
    </Page.Resources>

    <Grid LostFocus="Grid_LostFocus">
        <!-- Listbox 1 -->
        <TextBlock Text="Action Data" Margin="10 30 0 400" Width="150" HorizontalAlignment="Left" FontFamily="Roboto" FontSize="14" TextAlignment="Center" Foreground="GhostWhite"/>
        <Border Background="LightSlateGray" Margin="10 50 0 0" Height="350" Width="150" HorizontalAlignment="Left" VerticalAlignment="Top">
            <ListBox x:Name="DataListBox" Background="Transparent" Foreground="GhostWhite" BorderThickness="0" KeyDown="DataDeleteKeyDown" SelectionChanged="DataSelectionChanged" MouseDown="DataMouseDown">
            </ListBox>
        </Border>
        <TextBox x:Name="DatasTextBox" Height="20" Width="150" Margin="10,0,0,28" HorizontalAlignment="Left" VerticalAlignment="Bottom" KeyDown="DataKeyDown"/>
        <Button Height="20" Width="50" Margin="111,0,0,7" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontWeight="SemiBold" FontFamily="Roboto" FontSize="14" Content="CLEAR" Style="{DynamicResource AddButton}" Cursor="Hand" Click="ClearDataList"/>
        <Button Height="20" Width="50" Margin="60,0,0,7" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="+" ToolTip="HINT: You can just press the enter key ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="AddDataButton"/>
        <Button Height="20" Width="50" Margin="9,0,0,7" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="-" ToolTip="HINT: You can just press the delete or backspace key on a selected item ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="RemoveDataButton"/>

        <!-- Listbox 2 -->
        <Border Background="LightSlateGray" Margin="351,154,0,0" Height="180" Width="122" HorizontalAlignment="Left" VerticalAlignment="Top">
            <ListBox x:Name="DataChoicesListBox" Background="Transparent" Foreground="GhostWhite" BorderThickness="0" KeyDown="DataChoicesDeleteKeyDown" SelectionChanged="DataChoicesSelectionChanged" MouseDown="DataChoicesMouseDown">
            </ListBox>
        </Border>
        <TextBox x:Name="DataChoicesTextBox" Height="20" Width="122" Margin="351,0,0,94" HorizontalAlignment="Left" VerticalAlignment="Bottom" KeyDown="DataChoicesKeyDown"/>
        <Button Height="20" Width="44" Margin="430,0,0,74" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontWeight="SemiBold" FontFamily="Roboto" FontSize="12" Content="CLEAR" Style="{DynamicResource AddButton}" Cursor="Hand" Click="ClearDataChoicesList"/>
        <Button Height="20" Width="40" Margin="390,0,0,74" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="+" ToolTip="HINT: You can just press the enter key ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="AddDataChoicesButton"/>
        <Button Height="20" Width="40" Margin="350,0,0,74" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="-" ToolTip="HINT: You can just press the delete or backspace key on a selected item ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="RemoveDataChoicesButton"/>

        <Label Content="*Data Label:" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="194,50,511,374"/>
        <Label Content="*Data ID:" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="194,76,532,348"/>
        <Label Content="*Data Type:" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="194,102,511,320"/>
        <Label Content="*Data Default Value:" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="194,128,454,296"/>
        <Label Content="*Data Value choices:" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="194,154,454,270"/>
        <Label Content="Data Extensions:" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="194,402,482,22"/>

        <!-- Input -->
        <TextBox x:Name="dataLabel" Background="#282828" BorderBrush="Transparent" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="348,50,221,374" Style="{DynamicResource TextBoxStyling}"/>
        <TextBox x:Name="dataID" Background="#282828" BorderBrush="Transparent" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="348,76,221,348" Style="{DynamicResource TextBoxStyling}"/>
        <ComboBox x:Name="DataTypeComboBox" ToolTip="This specifies wether this action is a static action &quot;execute&quot; or a dynamic action &quot;communicate&quot;" Margin="348,102,221,323" BorderBrush="Transparent" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Foreground="GhostWhite" Background="#282828" SelectedIndex="0">
            <ComboBoxItem Content="Text"/>
            <ComboBoxItem Content="Number"/>
            <ComboBoxItem Content="Switch"/>
            <ComboBoxItem Content="Choice"/>
        </ComboBox>
        <Label Content="&#8595;" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="557,100,221,320" Focusable="False" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>

        <ComboBox x:Name="DataDefaultValueComboBox" ToolTip="This specifies wether this action is a static action &quot;execute&quot; or a dynamic action &quot;communicate&quot;" Margin="348,127,221,298" BorderBrush="Transparent" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Foreground="GhostWhite" Background="#282828" SelectedIndex="0">
        </ComboBox>
        <Label Content="&#8595;" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="557,124,221,296" Focusable="False" MouseLeftButtonDown="Label2_MouseLeftButtonDown"/>

        <TextBox x:Name="dataExtensions" Background="#282828" BorderBrush="Transparent" Foreground="GhostWhite" FontFamily="Roboto" FontSize="16" FontWeight="Thin" Margin="348,402,221,22" Style="{DynamicResource TextBoxStyling}"/>
    </Grid>
</Page>
