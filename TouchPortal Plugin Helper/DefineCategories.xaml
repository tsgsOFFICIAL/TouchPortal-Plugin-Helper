<Page x:Class="TouchPortal_Plugin_Helper.DefineCategories"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="DefineCategories"
      >
    
    <Page.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Gray"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="AddButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#598a94"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#929ba8"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#afb9c9"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent"/>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ContextMenu x:Key="cmCategory">
            <MenuItem Header="Edit" Click="Edit_Category_Click">
                <MenuItem.Icon>
                    <Image Source="resources/pencil.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove" Click="Remove_Category_Click">
                <MenuItem.Icon>
                    <Image Source="resources/bin.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="cmAction">
            <MenuItem Header="Edit" Click="Edit_Action_Click">
                <MenuItem.Icon>
                    <Image Source="resources/pencil.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove" Click="Remove_Action_Click">
                <MenuItem.Icon>
                    <Image Source="resources/bin.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="cmEvent">
            <MenuItem Header="Edit" Click="Edit_Event_Click">
                <MenuItem.Icon>
                    <Image Source="resources/pencil.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove" Click="Remove_Event_Click">
                <MenuItem.Icon>
                    <Image Source="resources/bin.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <ContextMenu x:Key="cmState">
            <MenuItem Header="Edit" Click="Edit_State_Click">
                <MenuItem.Icon>
                    <Image Source="resources/pencil.png" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Remove" Click="Remove_State_Click">
                <MenuItem.Icon>
                    <Image Source="resources/bin.png" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </Page.Resources>

    <Grid>
        <!-- Categories border -->
        <TextBlock Text="Categories" Margin="10 30 0 400" Width="150" HorizontalAlignment="Left" FontFamily="Roboto" FontSize="14" TextAlignment="Center" Foreground="GhostWhite"/>
        <Border Background="LightSlateGray" Margin="10 50 0 0" Height="350" Width="150" HorizontalAlignment="Left" VerticalAlignment="Top">
            <ListBox x:Name="CategoriesListBox" Background="Transparent" Foreground="GhostWhite" BorderThickness="0" KeyDown="CategoriesDeleteKeyDown" SelectionChanged="CategorySelectionChanged" MouseDown="CategoryMouseDown" MouseDoubleClick="CategoriesMouseDoubleClick">
            </ListBox>
        </Border>
        <TextBox x:Name="CategoriesTextBox" Height="20" Width="150" Margin="10,0,0,28" HorizontalAlignment="Left" VerticalAlignment="Bottom" KeyDown="CategoriesKeyDown"/>
        <Button Height="20" Width="50" Margin="111,0,0,7" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontWeight="SemiBold" FontFamily="Roboto" FontSize="14" Content="CLEAR" Style="{DynamicResource AddButton}" Cursor="Hand" Click="ClearCategoryList"/>
        <Button Height="20" Width="50" Margin="60,0,0,7" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="+" ToolTip="HINT: You can just press the enter key ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="AddCategoryButton"/>
        <Button Height="20" Width="50" Margin="9,0,0,7" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="-" ToolTip="HINT: You can just press the delete or backspace key on a selected item ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="RemoveCategoryButton"/>

        <!-- Actions border -->
        <TextBlock Text="Actions" Margin="220 30 0 400" Width="150" HorizontalAlignment="Left" FontFamily="Roboto" FontSize="14" TextAlignment="Center" Foreground="GhostWhite"/>
        <Border Background="LightSlateGray" Margin="220 50 0 0" Height="350" Width="150" HorizontalAlignment="Left" VerticalAlignment="Top">
            <ListBox x:Name="ActionsListBox" Background="Transparent" Foreground="GhostWhite" BorderThickness="0" KeyDown="ActionsDeleteKeyDown" MouseDown="ActionMouseDown" MouseDoubleClick="ActionsMouseDoubleClick">
            </ListBox>
        </Border>
        <TextBox x:Name="ActionsTextBox" Height="20" Width="150" Margin="220,0,0,28" HorizontalAlignment="Left" VerticalAlignment="Bottom" KeyDown="ActionsEnter"/>
        <Button Height="20" Width="50" Margin="321,0,0,7" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontWeight="SemiBold" FontFamily="Roboto" FontSize="14" Content="CLEAR" Style="{DynamicResource AddButton}" Click="ClearActionList"/>
        <Button Height="20" Width="50" Margin="270,0,0,7" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="+" ToolTip="HINT: You can just press the enter key ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="AddActionButton"/>
        <Button Height="20" Width="50" Margin="219,0,0,7" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="-" ToolTip="HINT: You can just press the delete or backspace key on a selected item ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="RemoveActionButton"/>

        <!-- Events border -->
        <TextBlock Text="Events" Margin="0 30 220 400" Width="150" HorizontalAlignment="Right" FontFamily="Roboto" FontSize="14" TextAlignment="Center" Foreground="GhostWhite"/>
        <Border Background="LightSlateGray" Margin="0 50 220 0" Height="350" Width="150" HorizontalAlignment="Right" VerticalAlignment="Top">
            <ListBox x:Name="EventsListBox" Background="Transparent" Foreground="GhostWhite" BorderThickness="0" KeyDown="EventsDeleteKeyDown" MouseDown="EventMouseDown" MouseDoubleClick="EventsMouseDoubleClick">
            </ListBox>
        </Border>
        <TextBox x:Name="EventsTextBox" Height="20" Width="150" Margin="0,0,220,28" HorizontalAlignment="Right" VerticalAlignment="Bottom" KeyDown="EventsEnter"/>
        <Button Height="20" Width="50" Margin="0,0,219,7" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontWeight="SemiBold" FontFamily="Roboto" FontSize="14" Content="CLEAR" Style="{DynamicResource AddButton}" Click="ClearEventList"/>
        <Button Height="20" Width="50" Margin="0,0,270,7" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="+" ToolTip="HINT: You can just press the enter key ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="AddEventButton"/>
        <Button Height="20" Width="50" Margin="0,0,321,7" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="-" ToolTip="HINT: You can just press the delete or backspace key on a selected item ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="RemoveEventButton"/>

        <!-- States border -->
        <TextBlock Text="States" Margin="0 30 10 400" Width="150" HorizontalAlignment="Right" FontFamily="Roboto" FontSize="14" TextAlignment="Center" Foreground="GhostWhite"/>
        <Border Background="LightSlateGray" Margin="0 50 10 0" Height="350" Width="150" HorizontalAlignment="Right" VerticalAlignment="Top">
            <ListBox x:Name="StatesListBox" Background="Transparent" Foreground="GhostWhite" BorderThickness="0" KeyDown="StatesDeleteKeyDown" MouseDown="StateMouseDown" MouseDoubleClick="StatesMouseDoubleClick">
            </ListBox>
        </Border>
        <TextBox x:Name="StatesTextBox" Height="20" Width="150" Margin="0,0,10,28" HorizontalAlignment="Right" VerticalAlignment="Bottom" KeyDown="StatesEnter"/>
        <Button Height="20" Width="50" Margin="0,0,9,8" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontWeight="SemiBold" FontFamily="Roboto" Content="CLEAR" Style="{DynamicResource AddButton}" Click="ClearStateList"/>
        <Button Height="20" Width="50" Margin="0,0,60,8" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="+" ToolTip="HINT: You can just press the enter key ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="AddStateButton"/>
        <Button Height="20" Width="50" Margin="0,0,111,8" HorizontalAlignment="Right" VerticalAlignment="Bottom" FontFamily="Roboto" FontSize="14" Content="-" ToolTip="HINT: You can just press the delete or backspace key on a selected item ;)" Style="{DynamicResource AddButton}" Cursor="Hand" Click="RemoveStateButton"/>
        
    </Grid>
</Page>
